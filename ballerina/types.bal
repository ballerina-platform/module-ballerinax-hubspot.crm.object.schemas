// AUTO-GENERATED FILE.
// This file is auto-generated by the Ballerina OpenAPI tool.

import ballerina/http;

# Defines attributes to update on an object type.
public type ObjectTypeDefinitionPatch record {
    # The names of secondary properties for this object. These will be displayed as secondary on the HubSpot record page for this object type.
    string[] secondaryDisplayProperties?;
    # The names of properties that should be **required** when creating an object of this type.
    string[] requiredProperties?;
    # Names of properties that will be indexed for this object type in by HubSpot's product search.
    string[] searchableProperties?;
    boolean clearDescription?;
    # The name of the primary property for this object. This will be displayed as primary on the HubSpot record page for this object type.
    string primaryDisplayProperty?;
    string description?;
    boolean restorable?;
    ObjectTypeDefinitionLabels labels?;
};

public type CollectionResponseObjectSchemaNoPaging record {
    ObjectSchema[] results;
};

# Defines an object type.
public type ObjectTypeDefinition record {
    # The names of secondary properties for this object. These will be displayed as secondary on the HubSpot record page for this object type.
    string[] secondaryDisplayProperties?;
    string objectTypeId?;
    string description?;
    string fullyQualifiedName?;
    ObjectTypeDefinitionLabels labels;
    boolean archived?;
    # When the object type was created.
    string createdAt?;
    # The names of properties that should be **required** when creating an object of this type.
    string[] requiredProperties;
    # Names of properties that will be indexed for this object type in by HubSpot's product search.
    string[] searchableProperties?;
    # The ID of the account that this object type is specific to.
    int:Signed32 portalId?;
    # The name of the primary property for this object. This will be displayed as primary on the HubSpot record page for this object type.
    string primaryDisplayProperty?;
    # A unique name for this object. For internal use only.
    string name;
    # A unique ID for this object type. Will be defined as {meta-type}-{unique ID}.
    string id;
    # When the object type was last updated.
    string updatedAt?;
};

# Represents the Queries record for the operation: get-/crm-object-schemas/v3/schemas_getAll
public type GetCrmObjectSchemasV3Schemas_getallQueries record {
    # Whether to return only results that have been archived.
    boolean archived = false;
};

# Defines a enumeration property option
public type OptionInput record {
    # Hidden options won't be shown in HubSpot.
    boolean hidden;
    # Options are shown in order starting with the lowest positive integer value. Values of -1 will cause the option to be displayed after any positive values.
    int:Signed32 displayOrder;
    # A description of the option.
    string description?;
    # A human-readable option label that will be shown in HubSpot.
    string label;
    # The internal value of the option, which must be used when setting the property value through the API.
    string value;
};

# Represents the Queries record for the operation: delete-/crm-object-schemas/v3/schemas/{objectType}_archive
public type DeleteCrmObjectSchemasV3SchemasObjecttype_archiveQueries record {
    # Whether to return only results that have been archived.
    boolean archived = false;
};

# Proxy server configurations to be used with the HTTP client endpoint.
public type ProxyConfig record {|
    # Host name of the proxy server
    string host = "";
    # Proxy server port
    int port = 0;
    # Proxy server username
    string userName = "";
    # Proxy server password
    @display {label: "", kind: "password"}
    string password = "";
|};

# Defines a property to create.
public type ObjectTypePropertyCreate record {
    boolean hidden?;
    # Controls how the property options will be sorted in the HubSpot UI.
    "DISPLAY_ORDER"|"ALPHABETICAL" optionSortStrategy?;
    # The order that this property should be displayed in the HubSpot UI relative to other properties for this object type. Properties are displayed in order starting with the lowest positive integer value. A value of -1 will cause the property to be displayed **after** any positive values.
    int:Signed32 displayOrder?;
    # A description of the property that will be shown as help text in HubSpot.
    string description?;
    # Whether the property will display the currency symbol in the HubSpot UI.
    boolean showCurrencySymbol?;
    # A human-readable property label that will be shown in HubSpot.
    string label;
    # The data type of the property.
    "string"|"number"|"date"|"datetime"|"enumeration"|"bool" 'type;
    # Whether the property can be used in a HubSpot form.
    boolean formField?;
    # The name of the group this property belongs to.
    string groupName?;
    # Defines the options this property will return, e.g. OWNER would return name of users on the portal.
    string referencedObjectType?;
    # Controls how text properties are formatted in the HubSpot UI
    "unformatted_single_line"|"multi_line"|"email"|"phone_number"|"domain_name"|"ip_address"|"physical_address"|"postal_code" textDisplayHint?;
    # The internal property name, which must be used when referencing the property from the API.
    string name;
    # A list of available options for the property. This field is only required for enumerated properties.
    OptionInput[] options?;
    # Allow users to search for information entered to this field (limited to 3 properties)
    boolean searchableInGlobalSearch?;
    # Controls how numeric properties are formatted in the HubSpot UI
    "unformatted"|"formatted"|"currency"|"percentage"|"duration"|"probability" numberDisplayHint?;
    # Whether or not the property's value must be unique. Once set, this can't be changed.
    boolean hasUniqueValue?;
    # Controls how the property appears in HubSpot.
    string fieldType;
};

public type PropertyModificationMetadata record {
    #
    boolean readOnlyOptions?;
    #
    boolean readOnlyValue;
    #
    boolean readOnlyDefinition;
    #
    boolean archivable;
};

# Defines an association between two object types.
public type AssociationDefinitionEgg record {
    # ID of the primary object type to link from.
    string fromObjectTypeId;
    # A unique name for this association.
    string name?;
    # ID of the target object type to link to.
    string toObjectTypeId;
};

# Defines an association between two object types.
public type AssociationDefinition record {
    # When the association was defined.
    string createdAt?;
    # ID of the primary object type to link from.
    string fromObjectTypeId;
    # A unique name for this association.
    string name?;
    # A unique ID for this association.
    string id;
    # ID of the target object type to link to.
    string toObjectTypeId;
    # When the association was last updated.
    string updatedAt?;
};

# Defines an object schema, including its properties and associations.
public type ObjectSchema record {
    # Associations defined for a given object type.
    AssociationDefinition[] associations;
    # The names of secondary properties for this object. These will be displayed as secondary on the HubSpot record page for this object type.
    string[] secondaryDisplayProperties?;
    int:Signed32 createdByUserId?;
    string objectTypeId?;
    string description?;
    int:Signed32 updatedByUserId?;
    # An assigned unique ID for the object, including portal ID and object name.
    string fullyQualifiedName?;
    ObjectTypeDefinitionLabels labels;
    boolean archived?;
    # When the object schema was created.
    string createdAt?;
    # The names of properties that should be **required** when creating an object of this type.
    string[] requiredProperties;
    # Names of properties that will be indexed for this object type in by HubSpot's product search.
    string[] searchableProperties?;
    # The name of the primary property for this object. This will be displayed as primary on the HubSpot record page for this object type.
    string primaryDisplayProperty?;
    # A unique name for the schema's object type.
    string name;
    # A unique ID for this schema's object type. Will be defined as {meta-type}-{unique ID}.
    string id;
    # Properties defined for this object type.
    Property[] properties;
    # When the object schema was last updated.
    string updatedAt?;
};

# Provides settings related to HTTP/1.x protocol.
public type ClientHttp1Settings record {|
    # Specifies whether to reuse a connection for multiple requests
    http:KeepAlive keepAlive = http:KEEPALIVE_AUTO;
    # The chunking behaviour of the request
    http:Chunking chunking = http:CHUNKING_AUTO;
    # Proxy server related options
    ProxyConfig proxy?;
|};

public type AnydataDefault record {|
    *http:DefaultStatusCodeResponse;
    anydata body;
|};

# OAuth2 Refresh Token Grant Configs
public type OAuth2RefreshTokenGrantConfig record {|
    *http:OAuth2RefreshTokenGrantConfig;
    # Refresh URL
    string refreshUrl = "https://api.hubapi.com/oauth/v1/token";
|};

# Singular and plural labels for the object. Used in CRM display.
public type ObjectTypeDefinitionLabels record {
    # The word for multiple objects. (There’s no way to change this later.)
    string plural?;
    # The word for one object. (There’s no way to change this later.)
    string singular?;
};

# Defines a new object type, its properties, and associations.
public type ObjectSchemaEgg record {
    # The names of secondary properties for this object. These will be displayed as secondary on the HubSpot record page for this object type.
    string[] secondaryDisplayProperties?;
    # The names of properties that should be **required** when creating an object of this type.
    string[] requiredProperties;
    # Names of properties that will be indexed for this object type in by HubSpot's product search.
    string[] searchableProperties?;
    # The name of the primary property for this object. This will be displayed as primary on the HubSpot record page for this object type.
    string primaryDisplayProperty?;
    # A unique name for this object. For internal use only.
    string name;
    string description?;
    # Associations defined for this object type.
    string[] associatedObjects;
    # Properties defined for this object type.
    ObjectTypePropertyCreate[] properties;
    ObjectTypeDefinitionLabels labels;
};

# The options available when a property is an enumeration
public type Option record {
    # Hidden options will not be displayed in HubSpot.
    boolean hidden;
    # Options are displayed in order starting with the lowest positive integer value. Values of -1 will cause the option to be displayed after any positive values.
    int:Signed32 displayOrder?;
    # A description of the option.
    string description?;
    # A human-readable option label that will be shown in HubSpot.
    string label;
    # The internal value of the option, which must be used when setting the property value through the API.
    string value;
};

# Defines a property
public type Property record {
    boolean hidden?;
    # The order that this property should be displayed in the HubSpot UI relative to other properties for this object type. Properties are displayed in order starting with the lowest positive integer value. A value of -1 will cause the property to be displayed **after** any positive values.
    int:Signed32 displayOrder?;
    # A description of the property that will be shown as help text in HubSpot.
    string description;
    # Whether the property will display the currency symbol set in the account settings.
    boolean showCurrencySymbol?;
    # The property data type.
    string 'type;
    # This will be true for default object properties built into HubSpot.
    boolean hubspotDefined?;
    # When the property was created
    string createdAt?;
    # Whether or not the property is archived.
    boolean archived?;
    # A list of valid options for the property. This field is required for enumerated properties, but will be empty for other property types.
    Option[] options;
    # Whether or not the property's value must be unique. Once set, this can't be changed.
    boolean hasUniqueValue?;
    # For default properties, true indicates that the property is calculated by a HubSpot process. It has no effect for custom properties.
    boolean calculated?;
    # For default properties, true indicates that the options are stored externally to the property settings.
    boolean externalOptions?;
    #
    string updatedAt?;
    # The internal ID of the user who created the property in HubSpot. This field may not exist if the property was created outside of HubSpot.
    string createdUserId?;
    PropertyModificationMetadata modificationMetadata?;
    string[] sensitiveDataCategories?;
    # A human-readable property label that will be shown in HubSpot.
    string label;
    # Whether or not the property can be used in a HubSpot form.
    boolean formField?;
    "non_sensitive"|"sensitive"|"highly_sensitive" dataSensitivity?;
    # When the property was archived.
    string archivedAt?;
    # The name of the property group the property belongs to.
    string groupName;
    # If this property is related to other object(s), they'll be listed here.
    string referencedObjectType?;
    # The internal property name, which must be used when referencing the property via the API.
    string name;
    string calculationFormula?;
    # Controls how the property appears in HubSpot.
    string fieldType;
    # The internal user ID of the user who updated the property in HubSpot. This field may not exist if the property was updated outside of HubSpot.
    string updatedUserId?;
};

# Provides API key configurations needed when communicating with a remote HTTP endpoint.
public type ApiKeysConfig record {|
    string private\-app\-legacy;
|};

# Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.
@display {label: "Connection Config"}
public type ConnectionConfig record {|
    # Provides Auth configurations needed when communicating with a remote HTTP endpoint.
    http:BearerTokenConfig|OAuth2RefreshTokenGrantConfig|ApiKeysConfig auth;
    # The HTTP version understood by the client
    http:HttpVersion httpVersion = http:HTTP_2_0;
    # Configurations related to HTTP/1.x protocol
    ClientHttp1Settings http1Settings?;
    # Configurations related to HTTP/2 protocol
    http:ClientHttp2Settings http2Settings?;
    # The maximum time to wait (in seconds) for a response before closing the connection
    decimal timeout = 60;
    # The choice of setting `forwarded`/`x-forwarded` header
    string forwarded = "disable";
    # Configurations associated with request pooling
    http:PoolConfiguration poolConfig?;
    # HTTP caching related configurations
    http:CacheConfig cache?;
    # Specifies the way of handling compression (`accept-encoding`) header
    http:Compression compression = http:COMPRESSION_AUTO;
    # Configurations associated with the behaviour of the Circuit Breaker
    http:CircuitBreakerConfig circuitBreaker?;
    # Configurations associated with retrying
    http:RetryConfig retryConfig?;
    # Configurations associated with inbound response size limits
    http:ResponseLimitConfigs responseLimits?;
    # SSL/TLS-related options
    http:ClientSecureSocket secureSocket?;
    # Proxy server related options
    http:ProxyConfig proxy?;
    # Enables the inbound payload validation functionality which provided by the constraint package. Enabled by default
    boolean validation = true;
|};
